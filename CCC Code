// All valid credit card numbers
const valid1 = [4, 5, 3, 9, 6, 7, 7, 9, 0, 8, 0, 1, 6, 8, 0, 8];
const valid2 = [5, 5, 3, 5, 7, 6, 6, 7, 6, 8, 7, 5, 1, 4, 3, 9];
const valid3 = [3, 7, 1, 6, 1, 2, 0, 1, 9, 9, 8, 5, 2, 3, 6];
const valid4 = [6, 0, 1, 1, 1, 4, 4, 3, 4, 0, 6, 8, 2, 9, 0, 5];
const valid5 = [4, 5, 3, 9, 4, 0, 4, 9, 6, 7, 8, 6, 9, 6, 6, 6];

// All invalid credit card numbers
const invalid1 = [4, 5, 3, 2, 7, 7, 8, 7, 7, 1, 0, 9, 1, 7, 9, 5];
const invalid2 = [5, 7, 9, 5, 5, 9, 3, 3, 9, 2, 1, 3, 4, 6, 4, 3];
const invalid3 = [3, 7, 5, 7, 9, 6, 0, 8, 4, 4, 5, 9, 9, 1, 4];
const invalid4 = [6, 0, 1, 1, 1, 2, 7, 9, 6, 1, 7, 7, 7, 9, 3, 5];
const invalid5 = [5, 3, 8, 2, 0, 1, 9, 7, 7, 2, 8, 8, 3, 8, 5, 4];

// Can be either valid or invalid
const mystery1 = [3, 4, 4, 8, 0, 1, 9, 6, 8, 3, 0, 5, 4, 1, 4];
const mystery2 = [5, 4, 6, 6, 1, 0, 0, 8, 6, 1, 6, 2, 0, 2, 3, 9];
const mystery3 = [6, 0, 1, 1, 3, 7, 7, 0, 2, 0, 9, 6, 2, 6, 5, 6, 2, 0, 3];
const mystery4 = [4, 9, 2, 9, 8, 7, 7, 1, 6, 9, 2, 1, 7, 0, 9, 3];
const mystery5 = [4, 9, 1, 3, 5, 4, 0, 4, 6, 3, 0, 7, 2, 5, 2, 3];

// An array of all the arrays above
const batch = [  valid1, valid2, valid3, valid4, valid5, invalid1, invalid2, invalid3, invalid4, invalid5, mystery1, mystery2, mystery3, mystery4, mystery5,];

// Add your functions below:
//function validateCred returns 'true; if the card is valid, 'false' if invalid
const validateCred = (arr) => {
  //first, create checkArr of numbers as step 1 of Luhn algorithm (the order of numbers in the array is not important)
  let checkArr = [];
  for (let i=(arr.length-2); i>=0; i=i-2) {
    if (arr[i]*2<9) {
    checkArr.push(arr[i]*2)
  } else { checkArr.push(arr[i]*2-9) }
  }
  for (let k=arr.length-1; k>=0; k=k-2) {
    checkArr.push(arr[k]);
  }
  //second, sum the values in checkArr to check if the sum modulo 10 is 0 and 
  //return true if yes, false if no
  let sum = checkArr.reduce(function(a,b){return a+b});
    if (sum % 10 === 0) {
    return true;
  } else { return false }
}
console.log(validateCred(batch[5]))

//function findInvalidCards creates a nested array with invalid card numbers
const findInvalidCards = (nestedArr) => {
  let invalidCardsArr = [];
  nestedArr.forEach(card=>validateCred(nestedArr));
  for (let j=0; j<nestedArr.length; j++) {
    if (validateCred(nestedArr[j])===false) {
      invalidCardsArr.push(nestedArr[j])
    } 
  }
  return invalidCardsArr;
}
console.log(findInvalidCards(batch))

//function idInvalidCardCompanies returns an array of card company names 
//for each invalid card in the array of invalid card numbers
const idInvalidCardCompanies = arrInvalid => {
  let invalidCardCompaniesArr = [];
  for (let k=0; k<arrInvalid.length; k++) {
    if (arrInvalid[k][0]===3) {
      invalidCardCompaniesArr.push("Amex (American Express)");
    } else if (arrInvalid[k][0]===4) {
      invalidCardCompaniesArr.push("Visa");
  } else if (arrInvalid[k][0]===5) {
      invalidCardCompaniesArr.push("Mastercard");
  } else if (arrInvalid[k][0]===6) {
      invalidCardCompaniesArr.push("Discover");
  } else {invalidCardCompaniesArr.push("Company Not Found")}
}
return invalidCardCompaniesArr;
}
console.log(idInvalidCardCompanies(findInvalidCards(batch)))

